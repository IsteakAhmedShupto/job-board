{"version":3,"file":"cookies-options.service.js","sourceRoot":"","sources":["../../src/cookies-options.service.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAC7E,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAGhD,OAAO,EAAE,YAAY,EAAE,MAAM,SAAS,CAAC;AAEvC,MAAM,CAAC,IAAM,eAAe,GAAG,IAAI,cAAc,CAAC,iBAAiB,CAAC,CAAC;AAGrE;IAIE,+BAAqC,OAA4B,EAC7C,QAAkB;QADD,wBAAA,EAAA,YAA4B;QAC7C,aAAQ,GAAR,QAAQ,CAAU;QACpC,IAAI,CAAC,cAAc,GAAG;YACpB,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC;YAC3C,MAAM,EAAE,SAAS;YACjB,OAAO,EAAE,SAAS;YAClB,MAAM,EAAE,KAAK;SACd,CAAC;QACF,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;IAC7D,CAAC;IAED,sBAAI,0CAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;;;OAAA;IAjBU,qBAAqB;QADjC,UAAU,EAAE;QAKE,WAAA,MAAM,CAAC,eAAe,CAAC,CAAA;iDACN,QAAQ;OAL3B,qBAAqB,CAkBjC;IAAD,4BAAC;CAAA,AAlBD,IAkBC;SAlBY,qBAAqB","sourcesContent":["import { Inject, Injectable, InjectionToken, Injector } from '@angular/core';\nimport { APP_BASE_HREF } from '@angular/common';\n\nimport { CookiesOptions } from './cookies-options';\nimport { mergeOptions } from './utils';\n\nexport const COOKIES_OPTIONS = new InjectionToken('COOKIES_OPTIONS');\n\n@Injectable()\nexport class CookiesOptionsService {\n  private defaultOptions: CookiesOptions;\n  private _options: CookiesOptions;\n\n  constructor(@Inject(COOKIES_OPTIONS) options: CookiesOptions = {},\n              private injector: Injector) {\n    this.defaultOptions = {\n      path: this.injector.get(APP_BASE_HREF, '/'),\n      domain: undefined,\n      expires: undefined,\n      secure: false\n    };\n    this._options = mergeOptions(this.defaultOptions, options);\n  }\n\n  get options(): CookiesOptions {\n    return this._options;\n  }\n}\n"]}